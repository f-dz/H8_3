swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger Rest Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /movie:
    get:
      operationId: movie.read_all
      tags:
        - Movie
      summary: Read the entire set of movie data, sorted by id
      description: Read the entire set of movie data, sorted by id
      responses:
        200:
          description: Successfully read movie data set operation
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: Id of the movie
                original_title:
                  type: string
                  description: Original title of the movie
                budget:
                  type: integer
                  description: Budget of the movie
                popularity:
                  type: integer
                  description: Popularity of the movie
                release_date:
                  type: string
                  description: Release date of the movie
                revenue:
                  type: integer
                  description: Revenue of the movie
                title:
                  type: string
                  description: Title of the movie
                vote_average:
                  type: number
                  description: Vote average of the movie
                vote_count:
                  type: integer
                  description: Vote count of the movie
                overview:
                  type: string
                  description: Overview of the movie
                tagline:
                  type: string
                  description: Tagline of the movie
                uid:
                  type: integer
                  description: Uid of the movie
                director_id:
                  type: integer
                  description: Director id that direct of the movie

    post:
      operationId: movie.create
      tags:
        - Movie
      summary: Create a movie data
      description: Create a new movie data
      parameters:
        - name: movie
          in: body
          description: Movie data to create
          required: True
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of the movie
              original_title:
                type: string
                description: Original title of the movie
              budget:
                type: integer
                description: Budget of the movie
              popularity:
                type: integer
                description: Popularity of the movie
              release_date:
                type: string
                description: Release date of the movie
              revenue:
                type: integer
                description: Revenue of the movie
              title:
                type: string
                description: Title of the movie
              vote_average:
                type: number
                description: Vote average of the movie
              vote_count:
                type: integer
                description: Vote count of the movie
              overview:
                type: string
                description: Overview of the movie
              tagline:
                type: string
                description: Tagline of the movie
              uid:
                type: integer
                description: Uid of the movie
              director_id:
                type: integer
                description: Director id that direct of the movie
      responses:
        201:
          description: Successfully created movie data
          schema:
            properties:
              id:
                type: integer
                description: Id of the movie
              original_title:
                type: string
                description: Original title of the movie
              budget:
                type: integer
                description: Budget of the movie
              popularity:
                type: integer
                description: Popularity of the movie
              release_date:
                type: string
                description: Release date of the movie
              revenue:
                type: integer
                description: Revenue of the movie
              title:
                type: string
                description: Title of the movie
              vote_average:
                type: number
                description: Vote average of the movie
              vote_count:
                type: integer
                description: Vote count of the movie
              overview:
                type: string
                description: Overview of the movie
              tagline:
                type: string
                description: Tagline of the movie
              uid:
                type: integer
                description: Uid of the movie
              director_id:
                type: integer
                description: Director id that direct of the movie

  /movie/{id}:
    get:
      operationId: movie.read_one
      tags:
        - Movie
      summary: Read one movie data
      description: Read one movie data
      parameters:
        - name: id
          in: path
          description: Id of movie to get
          type: integer
          required: True
      responses:
        200:
          description: Successfully read movie from movie data operation

    put:
      operationId: movie.update
      tags:
        - Movie
      summary: Update a movie data
      description: Update a movie data
      parameters:
        - name: id
          in: path
          description: Id movie data to update
          type: integer
          required: True
        - name: movie
          in: body
          schema:
            type: object
            properties:
              original_title:
                type: string
                description: Original title of the movie
              budget:
                type: integer
                description: Budget of the movie
              popularity:
                type: integer
                description: Popularity of the movie
              release_date:
                type: string
                description: Release date of the movie
              revenue:
                type: integer
                description: Revenue of the movie
              title:
                type: string
                description: Title of the movie
              vote_average:
                type: number
                description: Vote average of the movie
              vote_count:
                type: integer
                description: Vote count of the movie
              overview:
                type: string
                description: Overview of the movie
              tagline:
                type: string
                description: Tagline of the movie
              uid:
                type: integer
                description: Uid of the movie
              director_id:
                type: integer
                description: Director id that direct of the movie
      responses:
        200:
          description: Successfully updated movie
          schema:
            properties:
              id:
                type: integer
                description: Id of the movie
              original_title:
                type: string
                description: Original title of the movie
              budget:
                type: integer
                description: Budget of the movie
              popularity:
                type: integer
                description: Popularity of the movie
              release_date:
                type: string
                description: Release date of the movie
              revenue:
                type: integer
                description: Revenue of the movie
              title:
                type: string
                description: Title of the movie
              vote_average:
                type: number
                description: Vote average of the movie
              vote_count:
                type: integer
                description: Vote count of the movie
              overview:
                type: string
                description: Overview of the movie
              tagline:
                type: string
                description: Tagline of the movie
              uid:
                type: integer
                description: Uid of the movie
              director_id:
                type: integer
                description: Director id that direct of the movie

    delete:
      operationId: movie.delete
      tags:
        - Movie
      summary: Delete movie data from movie list
      description: Delete movie data
      parameters:
        - name: id
          in: path
          type: integer
          description: Id of movie to delete
          required: true
      responses:
        200:
          description: Successfully deleted movie data

  /movie/movie_by_director/{director_id}:
    get:
      operationId: movie.read_movie_by_director
      tags:
        - Movie
      summary: Read movie data from given director id
      description: Read movie data from given director id
      parameters:
        - name: director_id
          in: path
          description: Id of director to get
          type: integer
          required: True
      responses:
        200:
          description: Successfully read movie from movie data operation

  /movie/movie_top_three/{column}:
    get:
      operationId: movie.read_top_three
      tags:
        - Movie
      summary: Read top 3 movie data from given column
      description: Read top 3 movie data from given column
      parameters:
        - name: column
          in: path
          description: Column name of movie to get the top 3
          type: string
          enum: ['budget', 'popularity', 'revenue', 'vote_average', 'vote_count']
          required: True
      responses:
        200:
          description: Successfully read movie from movie data operation

  /director:
    get:
      operationId: director.read_all
      tags:
        - Director
      summary: Read the entire set of director, sorted by id
      description: Read the entire set of director, sorted by id
      responses:
        200:
          description: Successfully read director
          schema:
            type: array
            items:
              properties:
                id:
                  type: integer
                  description: Id of the director
                name:
                  type: string
                  description: Name of the director
                gender:
                  type: integer
                  description: Gender of the director
                uid:
                  type: integer
                  description: Uid of the director
                department:
                  type: string
                  description: Department of the director

    post:
      operationId: director.create
      tags:
        - Director
      summary: Create a director
      description: Create a director
      parameters:
        - name: director
          in: body
          description: Text content of the director to create
          required: True
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Id of the director
              name:
                type: string
                description: Name of the director
              gender:
                type: integer
                description: Gender of the director
              uid:
                type: integer
                description: Uid of the director
              department:
                type: string
                description: Department of the director
      responses:
        201:
          description: Successfully created a director
          schema:
            properties:
              id:
                type: integer
                description: Id of the director
              name:
                type: string
                description: Name of the director
              gender:
                type: integer
                description: Gender of the director
              uid:
                type: integer
                description: Uid of the director
              department:
                type: string
                description: Department of the director

  /director/{id}:
    get:
      operationId: director.read_one
      tags:
        - Director
      summary: Read a particular director
      description: Read a particular director
      parameters:
        - name: id
          in: path
          description: Id of the director
          type: integer
          required: True
      responses:
        200:
          description: Successfully read the director

    put:
      operationId: director.update
      tags:
        - Director
      summary: Update a director
      description: Update a director
      parameters:
        - name: id
          in: path
          description: Id the director to update
          type: integer
          required: True
        - name: director
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the director
              gender:
                type: integer
                description: Gender of the director
              uid:
                type: integer
                description: Uid of the director
              department:
                type: string
                description: Department of the director
      responses:
        200:
          description: Successfully updated the director
          schema:
            properties:
              id:
                type: integer
                description: Id of the director
              name:
                type: string
                description: Name of the director
              gender:
                type: integer
                description: Gender of the director
              uid:
                type: integer
                description: Uid of the director
              department:
                type: string
                description: Department of the director

    delete:
      operationId: director.delete
      tags:
        - Director
      summary: Delete a director
      description: Delete a director
      parameters:
        - name: id
          in: path
          description: Id of director
          type: integer
          required: True
      responses:
        200:
          description: Successfully deleted a director

  /director/director_profile/{movie_id}:
    get:
      operationId: director.read_director_profile
      tags:
        - Director
      summary: Read director data from given movie id
      description: Read director data from given movie id
      parameters:
        - name: movie_id
          in: path
          description: Id of movie to get
          type: integer
          required: True
      responses:
        200:
          description: Successfully read director from director data operation